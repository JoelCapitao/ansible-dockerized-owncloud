---

# tasks file for ansible-dockerized-owncloud
- hosts : kimsufi
  vars_files :
    - vars/external_vars.yml

  tasks:

  - name: "Pull the docker images"
    docker_image:
      name: "{{ item }}"
      state: present
      tag: latest
    with_items : "{{ docker_images_to_pull }}"


#  - block:
#    - name: "Check if volumes exist"
#      command: docker volume inspect owncloud_data
#      register: myvolume_exists
#      failed_when: false
#
#    - name: create myvolume
#      command: docker volume create --name owncloud_data -v /var/www/html owncloud /bin/true
#      when: myvolume_exists|failed
#    tags:
#      - volume
  
  - name: "create the data volume container in which Owncloud data will be stored"
    docker:
      name: owncloud_data
      image: busybox
      state: present
      volumes:
        - "{{ owncloud_data }}"

  - name: "create the data volume in which the letsencrypt certificates will be stored "
    docker:
      name: letsencrypt
      image: busybox
      state: present
      volumes:
        - /etc/letsencrypt

  - name: "create the data volume in which the letscrypt backups wil be stored"
    docker:
      name: letsencrypt-backup
      image: busybox
      state: present
      volumes:
        - /var/lib/letsencrypt

  - name: "create the data volume in which we will cach Diffie-Hellmann parameters"
    docker:
      name: dhparam-cache
      image: busybox
      state: present
      volumes:
        - /cache

  - name: "launch database container"
    docker:
      name: "{{ owncloud_dbname }}"
      image: "{{ database_image }}"
      state: started
      env:
        MYSQL_ROOT_PASSWORD: "{{ owncloud_db_root_password }}"

  - name: "launch owncloud container"
    docker:
      name: "{{ owncloud_container_name }}"
      image: "{{ owncloud_image }}"
      state: started
      net: http_network
      links:
        - owncloud_db:mysql
      volumes_from:
        - owncloud_data
      ports:
        - 8080:80

  - name: "launch nginx container with letsencrypt certificates"
    docker:
      name: lets-nginx
      image: "{{ letsnginx_image }}"
      state: restarted
      net: http_network
      env:
        EMAIL: "{{ email }}"
        DOMAIN: "{{ domain }}"
        UPSTREAM: "{{ upstream }}"
        STAGING: "{{ is_staging }}"
      ports:
        - 80:80
        - 443:443
      volumes_from:
        - letsencrypt
        - letsencrypt-backup
        - dhparam-cache
    tags: nginx

#  - name: "Change the ownership of the owncloud directory"
#    shell: docker exec "{{ owncloud_container_name }}" chown -R www-data:www-data "{{ owncloud_data }}"
#    tags : owner
#
#  - name: "Complete the installation "
#    shell: docker exec --user www-data "{{ owncloud_container_name }}" cd "{{ owncloud_data }}" && php occ maintenance:install --database 'mysql' --data-dir '"{{ owncloud_data }}/data"' --database-name '"{{ owncloud_dbname }}"' --database-user 'root' --database-pass '"{{ owncloud_db_root_password }}"' --database-host '"{{ owncloud_dbname }}"' --admin-user '"{{ admin_username }}"' --admin-pass '"{{ admin_password }}"'
#    tags: installation
#
#  - name: "Set trusted domain"
#    shell: docker exec --user www-data "{{ owncloud_container_name }}" php occ config:system:set trusted_domains 2 --value=owncloud.capitao.fr
#    tags: domain